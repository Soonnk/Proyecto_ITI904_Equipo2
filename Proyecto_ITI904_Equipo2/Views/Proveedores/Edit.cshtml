@model Proyecto_ITI904_Equipo2.Models.Compras.Proveedor

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">

<div class="row">
    <div class="col-lg-5">
        @using (Html.BeginForm("Edit", "Proveedores", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h1 style="text-align:center"><b>Proveedor</b></h1>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RFC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RFC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RFC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <input name="Image" class="fa-file-image-o" type="file" class="btn btn-default btn-sm">
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    <img src="@Url.Content("data:image/png;base64," + Model.ImageUrl)" alt="Imagen" width="150px" height="150px" />
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Estatus)
                            @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nota, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nota, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nota, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar cambios" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>


    <div class="col-lg-7">
        <h1 style="text-align:center"><b>Materiales que proporciona</b></h1>
        <br />
        @{Html.RenderAction("MostrarProveedoresMateriales", new { Model.Id }); }
        <hr />
        @*@Html.ActionLink("Agregar nuevos materiales", "MostrarMateriales", new { idProv = Model.Id })*@
        
        <form action="~/Proveedores/MostrarMateriales" method="post">
            <input type="hidden" name="idProv" id="idProv" value="@Model.Id" />
            <button type="submit" name="btnOpcion" class="btn btn-success btn-sm">
                <i class="glyphicon glyphicon-plus"></i> Agregar nuevos materiales
            </button>
        </form>
    </div>

</div>

@*<div>
    @Html.ActionLink("Salir", "Index")
</div>*@

<form action="~/Proveedores/Index" method="post">
    <input type="hidden" name="idProv" id="idProv" value="@Model.Id" />
    <button type="submit" name="btnOpcion" class="btn btn-warning btn-sm">
        <i class="glyphicon glyphicon-log-out"></i> Salir
    </button>
</form>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
