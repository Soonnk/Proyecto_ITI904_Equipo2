@using Proyecto_ITI904_Equipo2.Services;
@model Proyecto_ITI904_Equipo2.Models.Recetas.Receta

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Recetas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Receta</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <input name="Image" class="fa-file-image-o" type="file">
            @Html.ValidationMessageFor(model => model.Imagen)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Instrucciones, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Instrucciones, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.Instrucciones, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--RENDERIZADO DE LA LISTA DE TIPOS DE PREPARACIóN-->
        @Html.Partial("../TiposPreparacion/_TiposPreparacionSelector")

        <div class="form-group">
            @Html.LabelFor(model => model.TiempoPreparacion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TiempoPreparacion, new { htmlAttributes = new { @class = "form-control col-md-5", type = "timepicker" } })
                @Html.ValidationMessageFor(model => model.TiempoPreparacion, "", new { @class = "text-danger" })
            </div>
        </div>

        <!--INICIA ESPACIO PARA INGREDIENTES DE RECETA-->
        <h4>Ingredientes</h4>

        <div id="IngredientesReceta">
            <table>
                <thead>
                    <tr>
                        <td colspan="2"><input type="text" name="name" id="materialName" /></td>
                        <td><input type="text" name="cantidad" id="materialCantidad" /></td>
                        <td><input type="button" class="btn btn-sm" value="Agregar" onclick="requestIngrediente()" /></td>
                    </tr>
                    <tr>
                        <th>Clave</th>
                        <th>Descripcion</th>
                        <th>Cantidad</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody id="tblIngredientes">
                </tbody>
            </table>
        </div>
        <!--TERMINA ESPACIO PARA INGREDIENTES DE RECETA-->
        <span id="lblPrecio">Basado en el precio de los ingredientes el precio sugerido es: $0</span>
        <div class="form-group">
            @Html.LabelFor(model => model.Precio)
            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { id = "Precio", onchange = "updatePrecio()" } })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{
    @Scripts.Render("~/bundles/jquery_ui")
    <script>
        /*Cargamos la lista de autocompletado para la caja de texto*/
        $("#materialName").autocomplete({ source: @RecetasServices.GetMaterialsAsJSON() });

        var counter = 0;

        function requestIngrediente() {
            $.ajax({
                url: "@Url.Action("LoadIngrediente")",
                method: "POST",
                data: {
                    name: $("#materialName").val(),
                    cantidad: $("#materialCantidad").val(),
                    index: counter
                },
                success: function (data) {
                    $("#tblIngredientes").append(data);
                    $("#materialName").val("");
                    $("#materialCantidad").val("");
                    counter++;
                    updatePrecio();
                },
                error: function (data) {
                    alert("No se ha podido agregar el ingrediente");
                }
            });
        }

        function deleteIngrediente(ingrediente) {
            $("#Ingredientes\\[" + ingrediente + "\\]").css('display','none');
            $("#Ingredientes\\[" + ingrediente + "\\]\\.Estatus").attr("value", "D");
            updatePrecio();
        }

        function updatePrecio() {
            var total = 0;
            for (var i = 0; i < counter; i++) {
                var ingCosto = $("[name = 'Ingredientes["+i+"].Costo']")
                var ingCantidad = $("[name = 'Ingredientes[" + i + "].Cantidad']")
                total += ingCosto.val() * (ingCantidad.val()/1000)
            }

            $("#lblPrecio").html = "Basado en el precio de los ingredientes el precio sugerido es: $" + total.toFixed(2)
        }
    </script>
}